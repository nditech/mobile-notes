{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template: - Creates API Gateway and Lambda function. - Gets table name using cross stack reference. Modified from apigateway.1.json",

    "Parameters" : {
        "DynamoDBStack" : {
            "Description": "Name of the DynamoDB table as a parameter passed into this template.",
            "Type": "String",
            "Default" : "test-dynamodb-stack-2"
        }
    },

    "Resources": {
        "BaseLambdaExecutionPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "Base permissions needed by all lambda functions.",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": "*"
                        }
                    ]
                }
            }
        },
        "LambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Ref": "BaseLambdaExecutionPolicy"
                    }
                ],
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Sub": "${AWS::StackName}-lambda-policy"
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "",
                                    "Action": [
                                        "dynamodb:DeleteItem",
                                        "dynamodb:GetItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Query",
                                        "dynamodb:Scan",
                                        "dynamodb:UpdateItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        { "Fn::ImportValue": {"Fn::Sub": "${DynamoDBStack}-DDBTableARN"}}
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRole",
                        "Arn"
                    ]
                },
                "Handler": "index.handler",
                "Runtime": "nodejs8.10",
                "Environment": {
                    "Variables": {
                        "TABLE_NAME": {
                            "Fn::ImportValue": {"Fn::Sub": "${DynamoDBStack}-DDBTableName"}
                        }
                    }
                },
                "Code": {
                    "ZipFile": "exports.handler = function(event, context) {}\n"
                }
            }
        },
        "ApiGatewayRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "apigateway.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Sub": "test-invoke-lambda"
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "LambdaFunction",
                                                "Arn"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ApiGateway": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-api"
                },
                "Description": "A description",
                "FailOnWarnings": true,
                "Body": {
                    "swagger": 2,
                    "info": {
                        "description": "The account API.\n",
                        "version": 1
                    },
                    "basePath": "/",
                    "schemes": [
                        "https"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "paths": {
                        "/users/{userid}/hello": {
                            "get": {
                                "description": "TBD",
                                "x-amazon-apigateway-integration": {
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"
                                    },
                                    "credentials": {
                                        "Fn::GetAtt": [
                                            "ApiGatewayRole",
                                            "Arn"
                                        ]
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "type": "aws_proxy"
                                },
                                "operationId": "getHello",
                                "parameters": [
                                    {
                                        "name": "userid",
                                        "in": "path",
                                        "description": "TBD",
                                        "required": true,
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                ]
                            },
                            "post": {
                                "description": "TBD",
                                "x-amazon-apigateway-integration": {
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"
                                    },
                                    "credentials": {
                                        "Fn::GetAtt": [
                                            "ApiGatewayRole",
                                            "Arn"
                                        ]
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "type": "aws_proxy"
                                },
                                "operationId": "postHello",
                                "parameters": [
                                    {
                                        "name": "userid",
                                        "in": "path",
                                        "description": "TBD",
                                        "required": true,
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    {
                                        "name": "body",
                                        "in": "body",
                                        "description": "TBD",
                                        "required": true,
                                        "schema": {
                                            "type": "object",
                                            "required": [
                                                "email"
                                            ],
                                            "properties": {
                                                "email": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "ApiGatewayDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "ApiGateway"
                },
                "StageName": "prod"
            }
        }
    },
    "Outputs": {
        "ApiGatewayProdInvokeURL": {
            "Value": {
                "Fn::Sub": "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod"
            },
            "Description": "API Gateway prod Invoke URL."
        }
    }
}