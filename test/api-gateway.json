{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates API Gateway and Lambda function. Version: 1.0.3",

    "Parameters" : {
        "ApiGatewayName": {
            "Description": "Name of the Cognito user pool as a parameter passed into this template.",
            "Type": "String"
        },
        "CognitoUserPoolARN": {
            "Description": "Cognito User Pool ARN passed into this template from root stack.",
            "Type": "String"
        },
        "DynamoDBStack" : {
            "Description": "Name of the stack that created the DynamoDB table for this app, passed as a parameter passed into this template.",
            "Type": "String"
        }
    },

    "Resources": {
        "BaseLambdaExecutionPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "Base permissions needed by all lambda functions.",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": "*"
                        }
                    ]
                }
            }
        },
        "LambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Ref": "BaseLambdaExecutionPolicy"
                    }
                ],
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": ["-", [
                                {"Ref": "ApiGatewayName"}, 
                                "lambda-policy"
                            ]]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "",
                                    "Action": [
                                        "dynamodb:DeleteItem",
                                        "dynamodb:GetItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Query",
                                        "dynamodb:Scan",
                                        "dynamodb:UpdateItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        { "Fn::ImportValue": {"Fn::Sub": "${DynamoDBStack}-DDBTableARN"}}
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRole",
                        "Arn"
                    ]
                },
                "Handler": "index.handler",
                "Runtime": "nodejs8.10",
                "Environment": {
                    "Variables": {
                        "TABLE_NAME": {
                            "Fn::ImportValue": {"Fn::Sub": "${DynamoDBStack}-DDBTableName"}
                        }
                    }
                },
                "Code": {
                    "ZipFile": "exports.handler = function(event, context) {}\n"
                }
            }
        },
        "ApiGateway": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": {
                    "Ref": "ApiGatewayName"
                },
                "Description": "A description",
                "FailOnWarnings": true
            }
        },
        "ApiGatewayRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "apigateway.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": ["-", [
                                {"Ref": "ApiGatewayName"}, 
                                "api-gateway-policy"
                            ]]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "LambdaFunction",
                                                "Arn"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "GatewayAuthorizer": {
            "Type" : "AWS::ApiGateway::Authorizer",
            "Properties" : {
                "AuthorizerCredentials" : {
                    "Fn::GetAtt": ["ApiGatewayRole", "Arn"]
                },
                "IdentitySource" : "method.request.header.Authorization",
                "IdentityValidationExpression" : "^[a-zA-Z0-9]{3,32}$",
                "Name" : {
                    "Fn::Sub": "${ApiGatewayName}-authorizer"
                },
                "ProviderARNs" : [
                    {
                        "Ref": "CognitoUserPoolARN"
                    }
                ],
                "RestApiId" : {
                    "Ref": "ApiGateway"
                },
                "Type" : "COGNITO_USER_POOLS"
            }
        },
        "Model": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "ContentType": "application/json",
              "Name": "user",
              "RestApiId": {"Ref": "ApiGateway"},
              "Schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "user",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "userid": {
                    "type": "string"
                  }
                },
                "required": ["userid"]
              }
            }
        },
        "post": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {"Ref": "GatewayAuthorizer"},
              "RestApiId": {"Ref": "ApiGateway"},
              "ResourceId": {
                "Fn::GetAtt": ["ApiGateway", "RootResourceId"] 
            },
              "HttpMethod": "PUT",
              "Integration": {
                "Type": "AWS_PROXY",
                "IntegrationHttpMethod": "POST",
                "Uri": {"Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"},
                "IntegrationResponses": [{
                  "StatusCode": 204
                }],
                "RequestTemplates": {
                  "application/json": "{\"action\": \"put\", \"body\": $input.json('$')}"
                }
              },
              "RequestModels": {
                "application/json": {"Ref": "Model"}
              },
              "RequestParameters": {
                "method.request.header.Authorization": true
              },
              "MethodResponses": [{
                "ResponseModels": {
                  "application/json": "Empty"
                },
                "StatusCode": 204
              }]
            }
        },
        "ApiGatewayDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": "post",
            "Properties": {
                "RestApiId": {
                    "Ref": "ApiGateway"
                },
                "StageName": "prod"
            }
        }
    },
    "Outputs": {
        "ApiGatewayProdInvokeURL": {
            "Value": {
                "Fn::Sub": "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod"
            },
            "Description": "API Gateway prod Invoke URL."
        }
    }
}